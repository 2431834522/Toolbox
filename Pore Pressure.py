# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# Pore Pressure.py
# Created on: 2022-07-02 15:43:58.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: Pore Pressure <EP_B_760_2_1> <Input_series> <Expression> <Output_graph_name__2_> 
# Description: 
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy

# Script arguments
EP_B_760_2_1 = arcpy.GetParameterAsText(0)

Input_series = arcpy.GetParameterAsText(1)
if Input_series == '#' or not Input_series:
    Input_series = "SERIES=line:vertical DATA=E:\\Projet Of Daryan\\GDB\\Daryan_Edited.gdb\\EP_Cross_Section\\EP_B_760_2_1 X=Date Y=P_ton_m2 SORT=DESC;GRAPH=general;LEGEND=general;AXIS=left TITLE=PP;AXIS=right;AXIS=bottom TITLE=Date;AXIS=top" # provide a default value if unspecified

Expression = arcpy.GetParameterAsText(2)
if Expression == '#' or not Expression:
    Expression = "RU >  0.10040045048197985" # provide a default value if unspecified

Output_graph_name__2_ = arcpy.GetParameterAsText(3)
if Output_graph_name__2_ == '#' or not Output_graph_name__2_:
    Output_graph_name__2_ = "C:\\Users\\Motasam\\Desktop\\Ru\\x" # provide a default value if unspecified

# Local variables:
EP_B_760_2_1_Layer = "EP_B_760_2_1_Layer1"
EP_B_760_2_1_Layer__3_ = EP_B_760_2_1_Layer
EP_B_760_2_1_Layer__6_ = EP_B_760_2_1_Layer__3_
EP_B_760_2_1_Layer__2_ = EP_B_760_2_1_Layer__6_
EP_B_760_2_1_Layer__4_ = EP_B_760_2_1_Layer__2_
EP_B_760_2_1_Layer__7_ = EP_B_760_2_1_Layer__4_
EP_B_760_2_1_Layer__8_ = EP_B_760_2_1_Layer__7_
rexcvb = "E:\\Projet Of Daryan\\GDB\\Daryan.gdb\\rexcvb"

# Process: Make Feature Layer
arcpy.MakeFeatureLayer_management(EP_B_760_2_1, EP_B_760_2_1_Layer, "", "", "OBJECTID_1 OBJECTID_1 VISIBLE NONE;Shape Shape VISIBLE NONE;OBJECTID OBJECTID VISIBLE NONE;Instrument Instrument VISIBLE NONE;ID ID VISIBLE NONE;X X VISIBLE NONE;Y Y VISIBLE NONE;S_N S_N VISIBLE NONE;Z Z VISIBLE NONE;G G VISIBLE NONE;R0 R0 VISIBLE NONE;γ γ VISIBLE NONE;Date Date VISIBLE NONE;T T VISIBLE NONE;E_E E_E VISIBLE NONE;U_S_W_E U_S_W_E VISIBLE NONE;D_S_W_E D_S_W_E VISIBLE NONE;H H VISIBLE NONE;γH γH VISIBLE NONE;R1 R1 VISIBLE NONE;P_kPa P_kPa VISIBLE NONE;P_ton_m2 P_ton_m2 VISIBLE NONE;RU RU VISIBLE NONE;P_E P_E VISIBLE NONE")

# Process: Calculate Field
arcpy.CalculateField_management(EP_B_760_2_1_Layer, "H", "[E_E] - [Z]", "VB", "")

# Process: Calculate Field (2)
arcpy.CalculateField_management(EP_B_760_2_1_Layer__3_, "γH", "[γ] * [H]", "VB", "")

# Process: Calculate Field (3)
arcpy.CalculateField_management(EP_B_760_2_1_Layer__6_, "P_kPa", "([G]*( [R0] - [R1] ))", "VB", "")

# Process: Calculate Field (4)
arcpy.CalculateField_management(EP_B_760_2_1_Layer__2_, "P_ton_m2", "( ([G]*( [R0] - [R1] ) )/9.81)", "VB", "")

# Process: Calculate Field (5)
arcpy.CalculateField_management(EP_B_760_2_1_Layer__4_, "RU", "[P_ton_m2] / [γH]", "VB", "")

# Process: Calculate Field (6)
arcpy.CalculateField_management(EP_B_760_2_1_Layer__7_, "P_E", "[P_ton_m2] + [Z]", "VB", "")

# Process: Select
arcpy.Select_analysis(EP_B_760_2_1_Layer__8_, rexcvb, Expression)

# Process: Make Graph (2)
arcpy.MakeGraph_management("E:\\Projet Of Daryan\\GDB\\Graph.grf", Input_series, Output_graph_name__2_)

